/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/ext_power.h>
#include "keys_de.h"

&mmv {    
        time-to-max-speed-ms = <1000>;
        acceleration-exponent=<1>;
};
&mwh {    
        time-to-max-speed-ms = <1000>;
        acceleration-exponent=<1>;
}; 

#define XXX &none
#define ___ &trans

#define BASE 0
#define NAV 1
#define SYM 2
#define NUMPAD 3 
#define ADJ 4





/ {
  ZMK_MACRO(m_a,
        wait-ms = <0>;
        tap-ms = <20>;
        bindings = <&kp A>;
    )
    ZMK_MACRO(m_r,
        wait-ms = <0>;
        tap-ms = <20>;
        bindings = <&kp R>;
    )
    ZMK_MACRO(m_w,
        wait-ms = <0>;
        tap-ms = <20>;
        bindings = <&kp W>;
    )
    ZMK_MACRO(m_f,
        wait-ms = <0>;
        tap-ms = <20>;
        bindings = <&kp F>;
    )
    ZMK_MACRO(m_s,
        wait-ms = <0>;
        tap-ms = <20>;
        bindings = <&kp S>;
    )
    ZMK_MACRO(m_t,
        wait-ms = <0>;
        tap-ms = <20>;
        bindings = <&kp T>;
    )
    ZMK_MACRO(m_x,
        wait-ms = <0>;
        tap-ms = <20>;
        bindings = <&kp X>;
    )
    ZMK_MACRO(m_d,
        wait-ms = <0>;
        tap-ms = <20>;
        bindings = <&kp D>;
    )
    ZMK_MACRO(m_v,
        wait-ms = <0>;
        tap-ms = <20>;
        bindings = <&kp V>;
    )
    ZMK_MACRO(m_g,
        wait-ms = <0>;
        tap-ms = <20>;
        bindings = <&kp G>;
    )
    ZMK_MACRO(m_h,
        wait-ms = <0>;
        tap-ms = <20>;
        bindings = <&kp H>;
    )
    ZMK_MACRO(m_n,
        wait-ms = <0>;
        tap-ms = <20>;
        bindings = <&kp N>;
    )
    ZMK_MACRO(m_e,
        wait-ms = <0>;
        tap-ms = <20>;
        bindings = <&kp E>;
    )
    ZMK_MACRO(m_i,
        wait-ms = <0>;
        tap-ms = <20>;
        bindings = <&kp I>;
    )
    ZMK_MACRO(m_o,
        wait-ms = <0>;
        tap-ms = <20>;
        bindings = <&kp O>;
    )
    ZMK_MACRO(m_z,
        wait-ms = <0>;
        tap-ms = <20>;
        bindings = <&kp Z>;
    )


macros {
 
         ecomma: ecomma {
        compatible = "zmk,behavior-macro";
        label = "ecomma";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <1>;
        bindings = <&kp E &kp COMMA>;
    };
        sc: sc {
        compatible = "zmk,behavior-macro";
        label = "sc";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <1>;
        bindings = <&kp S &kp C>;
    };
    capssc: capssc {
        compatible = "zmk,behavior-macro";
        label = "capssc";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <1>;
        bindings = <&kp S &kp CAPS &kp C &kp CAPS >;
    };
    bracket: bracket {
        compatible = "zmk,behavior-macro";
        label = "bracket";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <1>;
        bindings = <&kp DE_LEFT_BRACKET &kp DE_RIGHT_BRACKET &kp LEFT >;
    };
    brace: brace {
        compatible = "zmk,behavior-macro";
        label = "brace";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <1>;
        bindings = <&kp DE_LEFT_BRACE &kp DE_RIGHT_BRACE &kp LEFT >;
    };
    paren: paren {
        compatible = "zmk,behavior-macro";
        label = "paren";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <1>;
        bindings = <&kp DE_LEFT_PARENTHESIS &kp DE_RIGHT_PARENTHESIS &kp LEFT >;
    };
    
    };




combos {
        /*                KEY POSITIONS

  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
  │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
  ╰───────────╮ 30  31 │ │ 32  33 ╭───────────╯
              ╰────────╯ ╰────────╯            */

        compatible = "zmk,combos";
       
        combo_pwr {
            timeout-ms = <50>;
            key-positions = <0 4>;
            bindings = <&kp C_POWER>;
        };
         combo_back {
            timeout-ms = <100>;
            key-positions = <30 31>;
            bindings = <&kp BSPC>;
        };
        combo_quote {
            timeout-ms = <50>;
            key-positions = <8 18>;
            bindings = <&kp LS(N2)>;
        };
        combo_apostroph {
            timeout-ms = <50>;
            key-positions = <0 10>;
            bindings = <&kp LS(BACKSLASH)>;
        };
        combo_semic {
            timeout-ms = <50>;
            key-positions = <6 16>;
            bindings = <&kp N6>;
        };
        combo_double {
            timeout-ms = <50>;
            key-positions = <3 13>;
            bindings = <&kp N5>;
        };
        combo_ae {
            timeout-ms = <25>;
            key-positions = <10 20>;
            bindings = <&kp SQT>;
        };
        combo_ue {
            timeout-ms = <25>;
            key-positions = <7 17>;
            bindings = <&kp LBKT>;
        };
        combo_oe {
            timeout-ms = <25>;
            key-positions = <19 29>;
            bindings = <&kp SEMI>;
        };
        combo_up {
            timeout-ms = <25>;
            key-positions = <11 12 13>;
            bindings = <&kp UP>;
        };
        combo_right {
            timeout-ms = <25>;
            key-positions = <12 13>;
            bindings = <&kp RIGHT>;
        };
        combo_left {
            timeout-ms = <25>;
            key-positions = <11 12>;
            bindings = <&kp LEFT>;
        };
        combo_down {
            timeout-ms = <25>;
            key-positions = <11 13>;
            bindings = <&kp DOWN>;
        };
        combo_sc {
            timeout-ms = <25>;
            key-positions = <12 22>;
            bindings = <&capSandlowc>;
        };
        combo_ecomma {
            timeout-ms = <25>;
            key-positions = <17 27>;
            bindings = <&ecomma>;
        };
        combo_bback {
            timeout-ms = <25>;
            key-positions = <1 2>;
            bindings = <&kp C_AC_BACK>;
        };
        combo_bforward {
            timeout-ms = <25>;
            key-positions = <2 3>;
            bindings = <&kp C_AC_FORWARD>;
        };


    };


  behaviors {


        capSandlowc: capSandlowc {
            compatible = "zmk,behavior-mod-morph";
            label = "capSandlowc";
            #binding-cells = <0>;
            bindings = <&sc>, <&capssc>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
   
hma: homerow_modsa {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODSa";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&m_a>;
        };
hmr: homerow_modsr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODSr";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&m_r>;
        };
hmw: homerow_modsw {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODSw";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&m_w>;
        };
hmf: homerow_modsf {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODSf";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&m_f>;
        };
hms: homerow_modss {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODSs";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&m_s>;
        };
hmt: homerow_modst {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODSt";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&m_t>;
        };
hmx: homerow_modsx {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODSx";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&m_x>;
        };
hmg: homerow_modsg {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODSg";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&m_g>;
        };
hmd: homerow_modsd {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODSd";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&m_d>;
        };
hmv: homerow_modsv {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODSv";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&m_v>;
        };
hmh: homerow_modsh {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODSh";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&m_h>;
        };
hmn: homerow_modsn {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODSn";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&m_n>;
        };
hme: homerow_modse {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODSe";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&m_e>;
        };    
hmi: homerow_modsi {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODSi";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&m_i>;
        };
hmo: homerow_modso {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODSo";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&m_o>;
        };
hmz: homerow_modsz {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODSz";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&m_z>;
        };

    
hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

  };

  keymap {
    compatible = "zmk,keymap";

    base_layer {
      bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                 &kp Q      &hmw ESC W   &hmf LSHIFT F    &kp P         &kp B             &kp J          &kp L        &kp U      &hmz ESC Z    &kp LC(BSPC)
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
            &hma LCTRL A    &hmr LGUI R   &hms RET S   &hmt LALT T   &hmg MINUS G         &kp M     &hmn RSHFT N  &hme LALT E   &hmi LGUI I   &hmo RCTRL O
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
             &lt NUMPAD Y  &hmx LALT X      &kp C      &hmd LCTRL D  &hmv LA(F4) V        &kp K      &hmh RALT H    &kp COMMA     &kp DOT     &kp LS(MINUS)
        // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                       &lt NAV TAB   &kp LSHFT          &lt SYM SPC   &lt SYM SPC
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
      >;
    };
      

    nav_layer {
      bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &mo ADJ      &kp C_PREV     &kp PG_UP      &kp C_NEXT   &kp C_PAUSE            ___      &mkp LCLK  &mmv MOVE_VERT(-2500)   &mkp RCLK   &mkp MCLK
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                 ___        &kp HOME      &kp PG_DN      &kp END         ___          &kp C_BRI_UP &mmv MOVE_HOR(-2500) &mmv MOVE_VERT(2500) &mmv MOVE_HOR(2500)   ___
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                 ___           ___         &kp DEL     &kp C_VOL_DN  &kp C_VOL_UP      &kp C_BRI_DN    &kp F24       &kp F23      &mwh SCROLL_UP &mwh SCROLL_DOWN
        // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                           ___           ___               ___           ___
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
      >;
    };

    sym_layer {
      bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
               &kp F11       &kp F12   &kp NON_US_HASH &kp NON_US_BACKSLASH &kp DE_CARET &bracket      &brace         &paren     &kp RA(MINUS)      ___
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
               &hm F1 N1    &hm F2 N2    &hm F3 N3      &hm F4 N4        ___               ___      &hm F7 N7    &hm F8 N8    &hm F9 N9     &hm F10 N0
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                &kp F13        ___           ___        &kp RBKT     &kp MINUS         &kp EQUAL     &kp SLASH         ___           ___         &kp F14
        // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                           ___           ___               ___          ___
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
      >;
    };

    base_layer_num {
      bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                 ___        &hm F7 N7     &hm F8 N8    &hm F9 N9         ___               ___           ___           ___           ___           ___
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                 ___        &hm F4 N4     &hm F5 N5    &hm F6 N6     &hm F10 N0            ___           ___           ___           ___           ___
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                 ___        &hm F1 N1     &hm F2 N2    &hm F3 N3         ___               ___           ___           ___           ___           ___
        // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                           ___           ___               ___           ___
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
      >;
    };

    adjust_layer {
      bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             XXX           &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2   &out OUT_TOG           ___           XXX           ___           XXX           XXX
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                &kp CAPS  &bt BT_SEL 3   &bt BT_SEL 4     XXX        &bt BT_CLR           ___           ___           ___           ___           XXX
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
            &sys_reset     &bootloader       XXX           XXX           XXX               XXX           XXX           XXX       &bootloader    &sys_reset
        // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                           XXX           XXX               XXX           XXX
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
      >;
    };
  };
};